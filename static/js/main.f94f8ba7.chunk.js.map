{"version":3,"sources":["components/Homepage/HomePage.js","components/HomeNavBar/HomeNavBar.js","components/Places/Places.js","components/Places/Place/Place.js","components/AddPage/AddPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","sendData","className","Container","Row","Col","xs","id","type","placeholder","Button","onClick","document","getElementById","value","HomeNavBar","Navbar","bg","Toggle","aria-controls","Collapse","Nav","Link","href","Places","places","remove","addReview","fluid","length","map","place","Place","name","category","city","state","sm","md","review","console","log","reviews","AddPage","useState","setName","setCategory","setCity","setState","Form","onSubmit","event","preventDefault","Group","as","controlId","Label","Control","onChange","e","target","variant","App","allPlaces","setAllPlaces","setPlaces","searchPlaces","data","matches","i","push","addPlace","list","removePlace","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f94f8ba7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nconst HomePage = ({ sendData }) => {\r\n\r\n    let onButtonClicked = () => {\r\n        sendData({\r\n            \"city\": document.getElementById(\"cityInput\").value,\r\n            \"state\": document.getElementById(\"stateInput\").value,\r\n        });\r\n\r\n        document.getElementById(\"cityInput\").value = '';\r\n        document.getElementById(\"stateInput\").value = '';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"mx-auto my-3 text-center\">mynearbyplaces</h1>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"5\">\r\n                        City <input id=\"cityInput\" className=\"w-100\" type=\"text\" placeholder=\"plumbers, delivery, takeout...\" />\r\n                    </Col>\r\n                    <Col xs=\"5\">\r\n                        State <input id=\"stateInput\" className=\"w-100\" type=\"text\" placeholder=\"Tucson, AZ\" />\r\n                    </Col>\r\n                    <Col xs=\"2\">\r\n                        <Button onClick={onButtonClicked} className=\"w-100\">Search</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomeNavBar = () => {\r\n    return (\r\n        <div>\r\n            <Navbar className=\"w-75 mx-auto\" bg=\"transparent\">\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav>\r\n                        <Nav.Link href=\"/\">Write a Review</Nav.Link>\r\n                        <Nav.Link href=\"/add\">Add a Place</Nav.Link>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                        <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeNavBar;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { Place } from '../../components';\r\n\r\nconst Places = ({ places, remove, addReview }) => {\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                {!places.length ? <p>Nearby places will appear here!</p> : places.map((place) => (\r\n                    <Row>\r\n                        <Col>\r\n                            <Place place={place} remove={remove} addReview={addReview} />\r\n                        </Col>\r\n                    </Row>\r\n                ))}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Places;\r\n","import React from 'react';\r\n\r\nimport { Button, Container, Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst Place = ({ place, remove, addReview }) => {\r\n    const handleRemove = () => {\r\n        remove(place);\r\n    }\r\n\r\n    const handleAddReview = () => {\r\n        let review = document.getElementById(\"review-input\").value;\r\n        console.log(\"Review in Place: \");\r\n        console.log(review);\r\n        addReview(place, review);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>{place.name}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {place.name} is a {place.category} in {place.city}, {place.state}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={12} md={4}><Button onClick={handleRemove}>Remove</Button></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={12} md={9}>\r\n                        <input id=\"review-input\" type=\"text\" />\r\n                    </Col>\r\n                    <Col sm={12} md={3}>\r\n                        <Button onClick={handleAddReview}>Add a Review</Button>\r\n                    </Col>\r\n                </Row>\r\n                {place.reviews.map((review) => (\r\n                    <Row>\r\n                        <Col>\r\n                            <p>\"{review}\"</p>\r\n                        </Col>\r\n                    </Row>\r\n                ))}\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Place;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\n\r\nconst AddPage = ({ sendData }) => {\r\n    const [name, setName] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [state, setState] = useState('');\r\n\r\n    let onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        console.log(name);\r\n        console.log(\"state info:\");\r\n        console.log(document.getElementById(\"\"))\r\n\r\n        sendData({\r\n            'name': name,\r\n            'category': category,\r\n            'city': city,\r\n            'state': state,\r\n            'reviews': []\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add a Place!</h3>\r\n\r\n            <Form onSubmit={onFormSubmit}>\r\n                <Form.Group as={Col} controlId=\"formGridName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control placeholder=\"Name of establishment\" onChange={(e) => {setName(e.target.value)}} />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridcategory\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control placeholder=\"Restaurant, etc.\" onChange={(e) => {setCategory(e.target.value)}} />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control placeholder=\"Tucson\" onChange={(e) => {setCity(e.target.value)}} />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control placeholder=\"Arizona\" onChange={(e) => {setState(e.target.value)}} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddPage;\r\n","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport { HomeNavBar, HomePage, Login, LoginNavBar, Signup, Places, AddPage } from './components';\n\nconst App = () => {\n  const [allPlaces, setAllPlaces] = useState([]);\n  const [places, setPlaces] = useState([]);\n\n  let searchPlaces = (data) => {\n    let matches = [];\n    for(let i = 0; i < allPlaces.length; i++){\n      if(allPlaces[i].city === data.city && allPlaces[i].state === data.state){\n        matches.push(allPlaces[i]);\n      }\n    }\n\n    setPlaces(matches);\n  }\n\n  let addPlace = (data) => {\n    let list = [...allPlaces];\n    list.push(data);\n    setAllPlaces(list);\n  }\n\n  let removePlace = (data) => {\n    for(let i = 0; i < allPlaces.length; i++){\n      if(allPlaces[i].name === data.name && allPlaces[i].city === data.city && allPlaces[i].state === data.state){\n        let list = [...allPlaces];\n        list.splice(i, 1);\n        setAllPlaces(list);\n      }\n    }\n\n    for(let i = 0; i < places.length; i++){\n      if(places[i].name === data.name && places[i].city === data.city && places[i].state === data.state){\n        let list = [...places];\n        list.splice(i, 1);\n        setPlaces(list);\n      }\n    }\n  }\n\n  let addReview = (data, review) => {\n    let list = [...allPlaces];\n\n    for(let i = 0; i < list.length; i++){\n      if(list[i].name === data.name && list[i].city === data.city && list[i].state === data.state){\n        list[i].reviews.push(review);\n      }\n    }\n\n    setAllPlaces(list);\n\n    list = [...places];\n\n    for(let i = 0; i < list.length; i++){\n      if(list[i].name === data.name && list[i].city === data.city && list[i].state === data.state){\n        list[i].reviews.push(review);\n      }\n    }\n\n    setPlaces(list);\n\n    console.log(places);\n  }\n  \n  return (\n    <div>\n      <HomeNavBar />\n      <HomePage sendData={searchPlaces} />\n      <AddPage sendData={addPlace} />\n      <Places places={places} remove={removePlace} addReview={addReview} />\n    </div>\n  );\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomeNavBar />\n          <HomePage sendData={searchPlaces} />\n          <AddPage sendData={addPlace} />\n          <Places places={places} remove={removePlace} addReview={addReview} />\n        </Route>\n        <Route path=\"/login\">\n          <LoginNavBar />\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <LoginNavBar />\n          <Signup />\n        </Route>\n        <Route path=\"/add\">\n          <LoginNavBar />\n          <AddPage sendData={addPlace} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}